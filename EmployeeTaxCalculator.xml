<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EmployeeTaxCalculator</name>
    </assembly>
    <members>
        <member name="T:EmployeeTaxCalculator.CsvImporter">
            <summary>
            Creating CsvImportor ClaSS.
            </summary>
        </member>
        <member name="M:EmployeeTaxCalculator.CsvImporter.ImportPayRecords(System.String)">
            <summary>
            Creating StreamReader variable to read csv file and store them in arrays.
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:EmployeeTaxCalculator.CsvImporter.CreatePayRecord(System.Int32,System.Double[],System.Double[],System.String,System.String)">
            <summary>
            This is Create Pay Record method.
            </summary>
            <param name="id"></param>
            <param name="hours"></param>
            <param name="rate"></param>
            <param name="visa"></param>
            <param name="yearToDate"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:EmployeeTaxCalculator.PayRecord" -->
        <member name="F:EmployeeTaxCalculator.PayRecord._hours">
            <summary>
            Create backing field variables for class.
            </summary>
        </member>
        <member name="P:EmployeeTaxCalculator.PayRecord.Id">
            <summary>
            Creating properties for Pay Record Class.
            </summary>
        </member>
        <member name="P:EmployeeTaxCalculator.PayRecord.Tax">
            <summary>
            Abstract properties.
            </summary>
        </member>
        <member name="M:EmployeeTaxCalculator.PayRecord.#ctor(System.Int32,System.Double[],System.Double[])">
            <summary>
            Create constructor for PayRecord Class.
            </summary>
            <param name="id"></param>
            <param name="hours"></param>
            <param name="rates"></param>
        </member>
        <member name="M:EmployeeTaxCalculator.PayRecord.GetDetails">
            <summary>
            Create method for Pay Record Class.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmployeeTaxCalculator.PayRecordWriter">
            <summary>
            Creating Pay Record Writer Class.
            </summary>
        </member>
        <member name="T:EmployeeTaxCalculator.Program">
            <summary>
            This is the main class of the solution.
            </summary>
        </member>
        <member name="M:EmployeeTaxCalculator.Program.Main(System.String[])">
            <summary>
            This is the Main method for Employee Tax Calculator.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:EmployeeTaxCalculator.ResidentPayRecord">
            <summary>
            This is Resident Pay Record Class.
            </summary>
        </member>
        <member name="P:EmployeeTaxCalculator.ResidentPayRecord.Tax">
            <summary>
            Override abstract property from Base Class.
            </summary>
        </member>
        <member name="M:EmployeeTaxCalculator.ResidentPayRecord.#ctor(System.Int32,System.Double[],System.Double[])">
            <summary>
            Create constructor for ResidentPayRecord Class.
            </summary>
            <param name="id"></param>
            <param name="hours"></param>
            <param name="rates"></param>
        </member>
        <member name="T:EmployeeTaxCalculator.TaxCalculator">
            <summary>
            TaxCalculator Class
            </summary>
        </member>
        <member name="M:EmployeeTaxCalculator.TaxCalculator.CalculateResidentialTax(System.Double)">
            <summary>
            Create method for Residential Employee Tax.
            </summary>
            <param name="gross"></param>
            <returns></returns>
        </member>
        <member name="M:EmployeeTaxCalculator.TaxCalculator.CalculateWorkingHolidayTax(System.Double,System.Double)">
            <summary>
            Creating method for Working Holiday Employee Tax.
            </summary>
            <param name="gross"></param>
            <param name="yearToDate"></param>
            <returns></returns>
        </member>
        <member name="T:EmployeeTaxCalculator.WorkingHolidayPayRecord">
            <summary>
            Working Holiday Pay Record Class.
            </summary>
        </member>
        <member name="F:EmployeeTaxCalculator.WorkingHolidayPayRecord._visa">
            <summary>
            Create backing fields.
            </summary>
        </member>
        <member name="P:EmployeeTaxCalculator.WorkingHolidayPayRecord.Visa">
            <summary>
            Define Properties for class
            </summary>
        </member>
        <member name="P:EmployeeTaxCalculator.WorkingHolidayPayRecord.YearToDate">
            <summary>
            Property for yearToDate
            </summary>
        </member>
        <member name="P:EmployeeTaxCalculator.WorkingHolidayPayRecord.Tax">
            <summary>
            Overriding properties derived from parent class.
            </summary>
        </member>
        <member name="M:EmployeeTaxCalculator.WorkingHolidayPayRecord.#ctor(System.Int32,System.Double[],System.Double[],System.Int32,System.Int32)">
            <summary>
            Creating Constructor for WorkingHolidayPayRecord Class.
            </summary>
            <param name="id"></param>
            <param name="hours"></param>
            <param name="rates"></param>
            <param name="visa"></param>
            <param name="yearToDate"></param>
        </member>
        <member name="M:EmployeeTaxCalculator.WorkingHolidayPayRecord.GetDetails">
            <summary>
            This method derived from base class.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
